name: branch-deploy

'on':
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '.deploy')}}

    steps:
      - name: checkout to main
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Make the script files executable
        run: chmod +x ./.github/scripts/branch-deploy.sh

      - name: validate environment
        id: validate-environment
        run: ./.github/scripts/branch-deploy.sh "validate-environment"
        env:
          COMMENT_BODY: ${{github.event.comment.body}}

      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v8.0.0
        with:
          environment_targets: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}
          trigger: '.deploy'
          sticky_locks: "true"
          update_branch: disabled
          skip_ci: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}
          skip_reviews: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}

      - name: update target revision
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: ./.github/scripts/branch-deploy.sh "update-target-revision"
        env:
          t_env_app: ${{steps.branch-deploy.outputs.environment}}
          T_BRANCH: ${{steps.branch-deploy.outputs.ref}}

      - uses: actions/checkout@v3
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        with:
          ref: ${{steps.branch-deploy.outputs.environment}}-branch-deploy-lock

      - name: Make the script files executable on bd branch
        run: chmod +x ./.github/scripts/branch-deploy.sh

      - name: update lock json
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: ./.github/scripts/branch-deploy.sh "update-lock-json"
        env:
          COMMENT_URL: ${{github.event.comment.html_url}}
          T_BRANCH: ${{steps.branch-deploy.outputs.ref}}


  unlock:
    name: unlock
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '.unlock') }}
    steps:
    - name: checkout to main
      uses: actions/checkout@v3
      with:
        ref: main
    - name: Make the script files executable
      run: chmod +x ./.github/scripts/branch-deploy.sh

    - name: validate environment
      id: validate-environment
      run: ./.github/scripts/branch-deploy.sh "validate-environment"
      env:
        COMMENT_BODY: ${{github.event.comment.body}}

    - name: branch-unlock
      id: branch-unlock
      uses: github/branch-deploy@v8.0.0
      with:
        environment_targets: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}
        trigger: '.deploy'
        sticky_locks: "true"

    - name: unlock-action
      run: ./.github/scripts/branch-deploy.sh "unlock-action"
      env:
        t_env_app: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}


  lock-info:
    name: lock-info
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.comment.body, '.lock') && contains(github.event.comment.body, '--info') }}
    steps:
      - name: checkout to main
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Make the script files executable
        run: chmod +x ./.github/scripts/branch-deploy.sh

      - name: validate environment
        id: validate-environment
        run: ./.github/scripts/branch-deploy.sh "validate-environment"
        env:
          COMMENT_BODY: ${{github.event.comment.body}}

      - name: lock-info
        id: lock-info
        uses: github/branch-deploy@v8.0.0
        with:
          environment_targets: ${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}
          trigger: '.deploy'
          sticky_locks: "true"
