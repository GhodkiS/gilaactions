name: branch-deploy-release-lock

'on':
  pull_request:
    branches: 
      - main
    types: [ closed ]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read

jobs:
  branch-deploy-release-lock:
      runs-on: ubuntu-latest
      steps:
      - name: checkout-main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: search locks
        id: search-locks
        run: ./.github/scripts/branch-deploy.sh -a "search-locks"
        env:
           T_BRANCH: ${{ github.head_ref }}

      - name: unlock on PR merge
        if: ${{github.event.pull_request.merged == true && steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS != ''}}
        uses: github/branch-deploy@v8.0.0
        id: unlock-on-merge
        with:
          unlock_on_merge_mode: "true"
          environment_targets: ${{steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS}}

      - name: unlock pr close
        if: ${{github.event.pull_request.merged == false && steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS != ''}}
        run: ./.github/scripts/branch-deploy.sh -a "unlock-pr-close"
        env:
          ACTIVE_LOCKS: ${{steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS}}

      - name: commit unlock main
        if: steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS != ''
        run: ./.github/scripts/branch-deploy.sh -a "commit-unlock-main"
        env:
          ACTIVE_LOCKS: ${{steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS}}
          ACTIVE_FIRST_LOCK: ${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}
      
      - uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          branch: "${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}-merge-temp"
          create_branch: true

      - name: Report tests check
        if: steps.commit.outputs.commit_hash != ''
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.checks.create({
              name: 'status-check-temp',
              head_sha: '${{ steps.commit.outputs.commit_hash }}',
              status: 'completed',
              conclusion: 'success',
              owner: context.repo.owner,
              repo: context.repo.repo
            })

      - name: Merge
        if: steps.commit.outputs.commit_hash != ''
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: "${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}-merge-temp"
          target_branch: main
          message: '[skip ci] merge'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: cleanup temp branch
        if: steps.commit.outputs.commit_hash != ''
        run: ./.github/scripts/branch-deploy.sh -a "cleanup"
        env:
          T_ENV_APP: ${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}

