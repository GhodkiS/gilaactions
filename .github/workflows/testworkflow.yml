name: branch-deploy-release-lock

'on':
  pull_request:
    branches: 
      - main
    types: [ closed ]

jobs:
  branch-deploy-release-lock:
      runs-on: ubuntu-latest
      steps:
      - name: merge to main
        uses: ./.github/workflows/actions/merge-main
        with:
          target-env: ${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}
          #git-checks: ${{vars.GIT_STATUS_CHECKS}}
        
      # - name: temp branch commit
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   id: commit
      #   with:
      #     branch: "${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}-merge-temp"
      #     create_branch: true
      #     commit_message: "[skip ci] branch-deploy unlock ${{steps.search-locks.outputs.GITHUB_ACTIVE_LOCKS}}"
      #     file_pattern: '*/applications/*/kustomization.yaml'

      # - name: Report tests check
      #   if: steps.commit.outputs.commit_hash != ''
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #      const pr_checks = "${{ vars.GIT_STATUS_CHECKS }}".split(",")
      #       for (pr_check of pr_checks) {
      #       console.log(pr_check);
      #       github.checks.create({
      #         name: pr_check,
      #         head_sha: '${{ steps.commit.outputs.commit_hash }}',
      #         status: 'completed',
      #         conclusion: 'success',
      #         owner: context.repo.owner,
      #         repo: context.repo.repo
      #       })
      #       }

      # - name: temp branch merge
      #   if: ${{ steps.commit.outputs.commit_hash != '' }}
      #   run: |
      #     git config --global user.name 'Saurabh Ghodki'
      #     git config --global user.email 'saurabh.ghodki91@gmail.com'
      #     git remote set-url --push origin https://Ghodkis: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@https://github.com/GhodkiS/gilaactions
      #     git checkout main
      #     git pull
      #     git reset --hard  "${{steps.validate-environment.outputs.GITHUB_TARGET_ENV}}-merge-temp"
      #     git push
      
      # - name: cleanup temp branch
      #   if: steps.commit.outputs.commit_hash != ''
      #   run: ./.github/scripts/branch-deploy.sh -a "cleanup"
      #   env:
      #     T_ENV_APP: ${{steps.search-locks.outputs.GITHUB_ACTIVE_FIRST_LOCK}}

