name: branch-deploy

on:
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments

    steps:
      # The branch-deploy Action
      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v8.0.0
        with:
          environment_targets: 'app1-dev,app2-dev,app1-qa,app2-qa'
          sticky_locks: "true"

        # If the branch-deploy Action was triggered, checkout our branch
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: update target revision
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        run: |
          t_env_app="${{steps.branch-deploy.outputs.environment}}"
          t_app=$(echo "$t_env_app" | awk -F '-' '{print $1}')
          t_env=$(echo "$t_env_app" | awk -F '-' '{print $2}')
          file="./$t_env/$t_app/kustomize.yaml"
          multiline_text=$(cat <<EOF
          - target:
              kind: Application
              name: $t_app
            patch: |-
               - op: replace
                 path: /spec/source/targetRevision
                 value: ${{steps.branch-deploy.outputs.ref}}
          EOF
          )
          echo "$multiline_text" >> "$file"
          git config --global user.name 'test-user'
          git config --global user.email 'saurabh.ghodki91@gmail.com'
          git add ./$t_env/$t_app/kustomize.yaml
          git commit -am "update target revision of ${{steps.branch-deploy.outputs.environment}} to ${{steps.branch-deploy.outputs.ref}}"
          git push
      - name: Cache Primes
        id: cache-primes
        uses: actions/save@v3
        with:
          path: prime-numbers
          key: ${{steps.branch-deploy.outputs.environment}}
        
        # run: pwd && echo ${{steps.branch-deploy.outputs.ref}} && echo ${{steps.branch-deploy.outputs.environment}} # this could be anything you want
