name: branch-deploy

on:
  issue_comment:
    types: [created]
  pull_request:
    branches: 
      - main
    types: [ opened, reopened, synchronize ]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read

jobs:
  PR-action:
      if: ${{ github.event.pull_request }}
      runs-on: ubuntu-latest
      steps:
      - name: merge-run
        run: |
          echo "run during merge"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: list branches
        run: |
          json_file="lock.json"
          key_to_update="branch"
          git branch -r | grep "\-branch\-deploy\-lock" | while read -r branch ; do
          git checkout $branch
          lock_branch=$(jq -r ".branch" "$json_file" 2> /dev/null)
          if [[ "$lock_branch" == "${{ github.head_ref }}" ]]
          then
          echo "GITHUB_ACTIVE_LOCK=true" >> $GITHUB_ENV
          break
          fi
          done

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: # only run on pull request comments and very specific comment body string as defined in our branch-deploy settings
      ${{ github.event.issue.pull_request &&
      (contains(github.event.comment.body, '.deploy') ||
      (contains(github.event.comment.body, '.lock') && contains(github.event.comment.body, '--info')))  }}
     
    steps:
      # The branch-deploy Action
      - name: create-env-target-deploy
        id: create-env-target-deploy
        run: |
          if [[ "${{github.event.comment.body}}" == ".deploy"* ]]
          then
              t_env=$(echo "${{github.event.comment.body}}" | sed 's/\.deploy //g')
          else
              t_env=$(echo "${{github.event.comment.body}}" | sed 's/\.lock //g' | sed 's/--info//g' )
          fi
          echo "GITHUB_TARGET_ENV=$t_env" >> $GITHUB_ENV
      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v8.0.0
        with:
          environment_targets: ${{env.GITHUB_TARGET_ENV}}
          trigger: '.deploy'
          disable_naked_commands: "true" 
          sticky_locks: "true"

        # If the branch-deploy Action was triggered, checkout our branch
      - uses: actions/checkout@v3
        with:
          ref: main
          
      - name: update target revision
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' && contains(github.event.comment.body, '.deploy') }}
        run: |
          t_env_app="${{env.GITHUB_TARGET_ENV}}"
          t_app=$(echo "$t_env_app" | awk -F '_' '{print $1}')
          t_env=$(echo "$t_env_app" | awk -F '_' '{print $2}')
          file="./$t_env/$t_app/kustomize.yaml"
          sed -i '/# lock target environment starts/,/# lock target environment ends/d' $file
          multiline_text=$(cat <<EOF
          # lock target environment starts
          - target:
              kind: Application
              name: $t_app
            patch: |-
               - op: replace
                 path: /spec/source/targetRevision
                 value: ${{steps.branch-deploy.outputs.ref}}
          # lock target environment ends
          EOF
          )
          echo "$multiline_text" >> "$file"
          git config --global user.name 'test-user'
          git config --global user.email 'saurabh.ghodki91@gmail.com'
          git add ./$t_env/$t_app/kustomize.yaml
          git commit -am "update target revision of ${{steps.branch-deploy.outputs.environment}} to ${{steps.branch-deploy.outputs.ref}}"
          git push
          echo $t_env_app >>  bd-${{steps.branch-deploy.outputs.ref}}
        
      - uses: actions/checkout@v3
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' && contains(github.event.comment.body, '.deploy') }}
        with:
          ref: ${{steps.branch-deploy.outputs.environment}}-branch-deploy-lock    
      - name: update bd-lock
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' && contains(github.event.comment.body, '.deploy') }}
        run: |
          #echo ${{steps.branch-deploy.outputs.ref}} > bd-lock.json
          json_file="lock.json"
          key_to_update="branch"
          new_value=${{steps.branch-deploy.outputs.ref}}
          json_content=$(cat "$json_file")
          updated_json=$(echo "$json_content" | jq --arg key "$key_to_update" --arg value "$new_value" '.[$key] = $value')
          echo "$updated_json" > "$json_file"
          git config --global user.name 'test-user'
          git config --global user.email 'tech.user@company.com'
          git add "$json_file"
          git commit -am "update branch target"
          git push

  unlock:
    name: unlock
    runs-on: ubuntu-latest
    if: # only run on pull request comments and very specific comment body string as defined in our branch-deploy settings
      ${{ github.event.issue.pull_request &&
      contains(github.event.comment.body, '.unlock') }}
    steps:
    - name: create-env-target-unlock
      id: create-env-target-unlock
      run: |
        t_env=$(echo "${{github.event.comment.body}}" | sed 's/\.unlock //g')
        echo "GITHUB_TARGET_ENV=$t_env" >> $GITHUB_ENV
    - name: branch-unlock
      id: branch-unlock
      uses: github/branch-deploy@v8.0.0
      with:
        environment_targets: ${{env.GITHUB_TARGET_ENV}}
        trigger: '.deploy'
        disable_naked_commands: "true" 
        sticky_locks: "true"

        # If the branch-deploy Action was triggered, checkout our branch
    - uses: actions/checkout@v3
      with:
        ref: main
    - name: unlock-action
      run: |
        t_env_app=${{env.GITHUB_TARGET_ENV}}
        t_app=$(echo "$t_env_app" | awk -F '_' '{print $1}')
        t_env=$(echo "$t_env_app" | awk -F '_' '{print $2}')
        file="./$t_env/$t_app/kustomize.yaml"
        sed -i '/# lock target environment starts/,/# lock target environment ends/d' $file
        git config --global user.name 'test-user'
        git config --global user.email 'saurabh.ghodki91@gmail.com'
        git add ./$t_env/$t_app/kustomize.yaml
        git commit -am "unlock $t_env_app"
        git push
